#!/usr/bin/env bash
#
# A dynamic scala runner, using coursier's app launch capabilities.
# Author: Dale Wijnand <dale.wijnand@gmail.com>
# https://github.com/dwijnand/scala-runners

app_name=$(basename "$0")

declare -r app_name
declare scala_version=latest.stable
declare -a java_args residual_args
declare verbose

echoerr() { echo >&2 "$@"; }
vlog()    { [[ -n "$verbose" ]] && echoerr "$@"; }

addJava()      {
  vlog "[addJava] arg = '$1'"
  java_args+=("-D")
  java_args+=("${1:2}")
}

require_arg() {
  local type="$1"
  local opt="$2"
  local arg="$3"

  if [[ -z "$arg" ]] || [[ "${arg:0:1}" == "-" ]]; then
    echo "Aborting: $opt requires <$type> argument"
    exit 1
  fi
}

while [[ $# -gt 0 ]]; do
  case "$1" in
                 -v) verbose=true && shift ;;
    --scala-version) require_arg version "$1" "$2" && scala_version="$2" && shift 2 ;;
                -28) scala_version="2.8+"  && shift ;;
                -29) scala_version="2.9+"  && shift ;;
               -210) scala_version="2.10+" && shift ;;
               -211) scala_version="2.11+" && shift ;;
               -212) scala_version="2.12+" && shift ;;
               -213) scala_version="2.13+" && shift ;;
             # -214) scala_version="2.14+" && shift ;;  # soon(tm)
             #   -3) scala_version="3+"    && shift ;;  # soon(tm)
                -D*) addJava "$1"          && shift ;;
                  *) residual_args+=("$1") && shift ;;
  esac
done

execRunner() {
  # print the arguments one to a line, quoting any containing spaces
  vlog "# Executing command line:" && {
    for arg; do
      if [[ -n "$arg" ]]; then
        if printf "%s\n" "$arg" | grep -q ' '; then
          printf >&2 "\"%s\"\n" "$arg"
        else
          printf >&2 "%s\n" "$arg"
        fi
      fi
    done
    vlog ""
  }

  "$@"
}

execRunner cs launch "$app_name:$scala_version" \
  "${java_args[@]}" \
  -- "${residual_args[@]}"
